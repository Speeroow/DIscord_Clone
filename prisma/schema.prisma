// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Profile {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  userId        String @unique
  name          String
  email         String?   @unique
  imageUrl      String

  servers Server[]
  members Member[]
  channels Channel[]

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Server {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String    
  imageUrl      String
  inviteCode    String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  members Member[]
  channels Channel[]

  profileId     String @db.ObjectId
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
}

enum MemberRole {
  ADMIN
  MODERATOR
  GUEST 
}

model Member {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  role MemberRole @default(GUEST)

  profileId     String @db.ObjectId
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  
  serverID      String @db.ObjectId
  server       Server @relation(fields: [serverID], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

enum ChannelType {
  TEXT
  AUDIO
  VIDEO
}

model Channel {
  id               String @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  type             ChannelType @default(TEXT)

  profileId     String @db.ObjectId
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  
  serverID      String @db.ObjectId
  server       Server @relation(fields: [serverID], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}